grid.y <- c(seq(0,1200,by=100))
abline(h=grid.y,col="grey")
abline(v=grid.x,col="grey")
abline(h=700,col="blue")
# points
lines(R1,signal,pch=1,cex=0.5,col="red",lty=1,lwd=2)
lines(R1,signal1,pch=1,cex=0.5,col="orange",lty=1,lwd=2)
lines(R1,signal2,pch=1,cex=0.5,col="darkgreen",lty=1,lwd=2)
lines(R1,signal3,pch=1,cex=0.5,col="purple",lty=1,lwd=2)
## plot filter shape
hpassButterworth <- function(npts, deltat, hfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/hfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
hp <- sqrt(omega^(2*n)/(1.0+omega^(2*n)))
hp
}
lpassButterworth <- function(npts, deltat, lfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/lfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
lp <- sqrt(1.0/(1.0+omega^(2*n)))
lp
}
bandpass <- function(npts, deltat, hfc, lfc, n){
deltaf <- 1.0/(deltat*npts)
domegah <- deltaf/hfc
domegal <- deltaf/lfc
omega <- rep(0,npts/2+1)
omegah <- (seq(1:(npts/2+1))-1)*domegah
omegal <- (seq(1:(npts/2+1))-1)*domegal
bp <- sqrt(omegah^(2*n)/(1.0+omegah^(2*n)))*sqrt(1.0/(1.0+omegal^(2*n)))
bp
}
signal <- c(rep(1000,10001))
# hpassButterworth(nfft, dt, fc[1], nPole)
nfft <- 20000
dt <- 0.01
fc <- c()
fc[1] <- 10
fc[2] <- 15
nPole <- 2
signal1 <- signal*lpassButterworth(nfft, dt, fc[1], nPole)
signal2 <- signal*lpassButterworth(nfft, dt, fc[1], 3)
signal3 <- signal*lpassButterworth(nfft, dt, fc[1], 4)
#
# signal2 <- signal*lpassButterworth(nfft, dt, fc[2], nPole)
# signal3 <- signal*bandpass(nfft, dt, fc[1], fc[2], nPole)
test <- hpassButterworth(nfft, dt, fc[1], nPole)
### plot
pic.name <- "Shape"
pic1 <- paste("C:/Users/User/Desktop/2018_Subduction zone earthquakes_research/201807_thesis/SA/plot Butterworth Filter shape/export image/",pic.name,".png")
R1 <- c(seq(1,10001,by=1))                                                      # 1,600;10,450
plot(R1,signal,type='n',ylim=c(0,1200),xlim=c(1,5000),ann=FALSE, axes=TRUE)  # ,main="Distance vs PGA"
# 畫格線
grid.x <- c(seq(0,5000,by=100))
grid.y <- c(seq(0,1200,by=100))
abline(h=grid.y,col="grey")
abline(v=grid.x,col="grey")
abline(h=700,col="blue")
# points
lines(R1,signal,pch=1,cex=0.5,col="red",lty=1,lwd=2)
lines(R1,signal1,pch=1,cex=0.5,col="orange",lty=1,lwd=2)
lines(R1,signal2,pch=1,cex=0.5,col="darkgreen",lty=1,lwd=2)
lines(R1,signal3,pch=1,cex=0.5,col="purple",lty=1,lwd=2)
# legend
legend.names <- c("Mw = 4.5","Mw = 5.5","Mw = 6.5","Mw = 7.5") # ,"Yeh,2016"
legend(100,1.3,legend=legend.names,col=c("red","orange","darkgreen","blue","grey"),lwd=c(2,2,2,2,1),lty=c(1,1,1,1,2),bg="white",cex=2)
# title
mtext(expression(bold("Bandworth Filter Shape")),side=3,line=4.5,cex=2.5)
# axis title
mtext("Amplitude",side=2,line=3,cex=2)
mtext("Frequency",side=1,line=3,cex=2)
# sigma x=2.7,2.7,3.5
# text(4,0.0017,paste("interevent sigma =",inter.residual),cex=2)
# text(4,0.0013,paste("intraevent sigma =",intra.residual),cex=2)
# text(5.5,0.001,paste("total sigma =",total),cex=2)
dev.off()
## plot filter shape
hpassButterworth <- function(npts, deltat, hfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/hfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
hp <- sqrt(omega^(2*n)/(1.0+omega^(2*n)))
hp
}
lpassButterworth <- function(npts, deltat, lfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/lfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
lp <- sqrt(1.0/(1.0+omega^(2*n)))
lp
}
bandpass <- function(npts, deltat, hfc, lfc, n){
deltaf <- 1.0/(deltat*npts)
domegah <- deltaf/hfc
domegal <- deltaf/lfc
omega <- rep(0,npts/2+1)
omegah <- (seq(1:(npts/2+1))-1)*domegah
omegal <- (seq(1:(npts/2+1))-1)*domegal
bp <- sqrt(omegah^(2*n)/(1.0+omegah^(2*n)))*sqrt(1.0/(1.0+omegal^(2*n)))
bp
}
signal <- c(rep(1000,10001))
# hpassButterworth(nfft, dt, fc[1], nPole)
nfft <- 20000
dt <- 0.01
fc <- c()
fc[1] <- 10
fc[2] <- 15
nPole <- 2
signal1 <- signal*lpassButterworth(nfft, dt, fc[1], nPole)
signal2 <- signal*lpassButterworth(nfft, dt, fc[1], 3)
signal3 <- signal*lpassButterworth(nfft, dt, fc[1], 4)
#
# signal2 <- signal*lpassButterworth(nfft, dt, fc[2], nPole)
# signal3 <- signal*bandpass(nfft, dt, fc[1], fc[2], nPole)
test <- hpassButterworth(nfft, dt, fc[1], nPole)
### plot
pic.name <- "Shape"
pic1 <- paste("C:/Users/User/Desktop/2018_Subduction zone earthquakes_research/201807_thesis/SA/plot Butterworth Filter shape/export image/",pic.name,".png")
png(pic1,width=750,height=750)
R1 <- c(seq(1,10001,by=1))                                                      # 1,600;10,450
plot(R1,signal,type='n',ylim=c(0,1200),xlim=c(1,5000),ann=FALSE, axes=TRUE)  # ,main="Distance vs PGA"
# 畫格線
grid.x <- c(seq(0,5000,by=100))
grid.y <- c(seq(0,1200,by=100))
abline(h=grid.y,col="grey")
abline(v=grid.x,col="grey")
abline(h=700,col="blue")
# points
lines(R1,signal,pch=1,cex=0.5,col="red",lty=1,lwd=2)
lines(R1,signal1,pch=1,cex=0.5,col="orange",lty=1,lwd=2)
lines(R1,signal2,pch=1,cex=0.5,col="darkgreen",lty=1,lwd=2)
lines(R1,signal3,pch=1,cex=0.5,col="purple",lty=1,lwd=2)
# legend
legend.names <- c("Mw = 4.5","Mw = 5.5","Mw = 6.5","Mw = 7.5") # ,"Yeh,2016"
legend(100,1.3,legend=legend.names,col=c("red","orange","darkgreen","blue","grey"),lwd=c(2,2,2,2,1),lty=c(1,1,1,1,2),bg="white",cex=2)
# title
mtext(expression(bold("Bandworth Filter Shape")),side=3,line=4.5,cex=2.5)
# axis title
mtext("Amplitude",side=2,line=3,cex=2)
mtext("Frequency",side=1,line=3,cex=2)
# sigma x=2.7,2.7,3.5
# text(4,0.0017,paste("interevent sigma =",inter.residual),cex=2)
# text(4,0.0013,paste("intraevent sigma =",intra.residual),cex=2)
# text(5.5,0.001,paste("total sigma =",total),cex=2)
dev.off()
## plot filter shape
hpassButterworth <- function(npts, deltat, hfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/hfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
hp <- sqrt(omega^(2*n)/(1.0+omega^(2*n)))
hp
}
lpassButterworth <- function(npts, deltat, lfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/lfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
lp <- sqrt(1.0/(1.0+omega^(2*n)))
lp
}
bandpass <- function(npts, deltat, hfc, lfc, n){
deltaf <- 1.0/(deltat*npts)
domegah <- deltaf/hfc
domegal <- deltaf/lfc
omega <- rep(0,npts/2+1)
omegah <- (seq(1:(npts/2+1))-1)*domegah
omegal <- (seq(1:(npts/2+1))-1)*domegal
bp <- sqrt(omegah^(2*n)/(1.0+omegah^(2*n)))*sqrt(1.0/(1.0+omegal^(2*n)))
bp
}
signal <- c(rep(1000,10001))
# hpassButterworth(nfft, dt, fc[1], nPole)
nfft <- 20000
dt <- 0.01
fc <- c()
fc[1] <- 10
fc[2] <- 15
nPole <- 2
signal1 <- signal*lpassButterworth(nfft, dt, fc[1], nPole)
signal2 <- signal*lpassButterworth(nfft, dt, fc[1], 3)
signal3 <- signal*lpassButterworth(nfft, dt, fc[1], 4)
#
# signal2 <- signal*lpassButterworth(nfft, dt, fc[2], nPole)
# signal3 <- signal*bandpass(nfft, dt, fc[1], fc[2], nPole)
test <- hpassButterworth(nfft, dt, fc[1], nPole)
### plot
pic.name <- "Shape"
pic1 <- paste("C:/Users/User/Desktop/2018_Subduction zone earthquakes_research/201807_thesis/SA/plot Butterworth Filter shape/export image/",pic.name,".png")
png(pic1,width=800,height=800)
R1 <- c(seq(1,10001,by=1))                                                      # 1,600;10,450
plot(R1,signal,type='n',ylim=c(0,1200),xlim=c(1,5000),ann=FALSE, axes=TRUE)  # ,main="Distance vs PGA"
# 畫格線
grid.x <- c(seq(0,5000,by=100))
grid.y <- c(seq(0,1200,by=100))
abline(h=grid.y,col="grey")
abline(v=grid.x,col="grey")
abline(h=700,col="blue")
# points
lines(R1,signal,pch=1,cex=0.5,col="red",lty=1,lwd=2)
lines(R1,signal1,pch=1,cex=0.5,col="orange",lty=1,lwd=2)
lines(R1,signal2,pch=1,cex=0.5,col="darkgreen",lty=1,lwd=2)
lines(R1,signal3,pch=1,cex=0.5,col="purple",lty=1,lwd=2)
# legend
legend.names <- c("Mw = 4.5","Mw = 5.5","Mw = 6.5","Mw = 7.5") # ,"Yeh,2016"
legend(100,1.3,legend=legend.names,col=c("red","orange","darkgreen","blue","grey"),lwd=c(2,2,2,2,1),lty=c(1,1,1,1,2),bg="white",cex=2)
# title
mtext(expression(bold("Bandworth Filter Shape")),side=3,line=4.5,cex=2.5)
# axis title
mtext("Amplitude",side=2,line=3,cex=2)
mtext("Frequency",side=1,line=3,cex=2)
# sigma x=2.7,2.7,3.5
# text(4,0.0017,paste("interevent sigma =",inter.residual),cex=2)
# text(4,0.0013,paste("intraevent sigma =",intra.residual),cex=2)
# text(5.5,0.001,paste("total sigma =",total),cex=2)
dev.off()
## plot filter shape
hpassButterworth <- function(npts, deltat, hfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/hfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
hp <- sqrt(omega^(2*n)/(1.0+omega^(2*n)))
hp
}
lpassButterworth <- function(npts, deltat, lfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/lfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
lp <- sqrt(1.0/(1.0+omega^(2*n)))
lp
}
bandpass <- function(npts, deltat, hfc, lfc, n){
deltaf <- 1.0/(deltat*npts)
domegah <- deltaf/hfc
domegal <- deltaf/lfc
omega <- rep(0,npts/2+1)
omegah <- (seq(1:(npts/2+1))-1)*domegah
omegal <- (seq(1:(npts/2+1))-1)*domegal
bp <- sqrt(omegah^(2*n)/(1.0+omegah^(2*n)))*sqrt(1.0/(1.0+omegal^(2*n)))
bp
}
signal <- c(rep(1000,10001))
# hpassButterworth(nfft, dt, fc[1], nPole)
nfft <- 20000
dt <- 0.01
fc <- c()
fc[1] <- 10
fc[2] <- 15
nPole <- 2
signal1 <- signal*lpassButterworth(nfft, dt, fc[1], nPole)
signal2 <- signal*lpassButterworth(nfft, dt, fc[1], 3)
signal3 <- signal*lpassButterworth(nfft, dt, fc[1], 4)
#
# signal2 <- signal*lpassButterworth(nfft, dt, fc[2], nPole)
# signal3 <- signal*bandpass(nfft, dt, fc[1], fc[2], nPole)
test <- hpassButterworth(nfft, dt, fc[1], nPole)
### plot
pic.name <- "Shape"
pic1 <- paste("C:/Users/User/Desktop/2018_Subduction zone earthquakes_research/201807_thesis/SA/plot Butterworth Filter shape/export image/",pic.name,".png")
png(pic1,width=800,height=800)
R1 <- c(seq(1,10001,by=1))                                                      # 1,600;10,450
plot(R1,signal,type='n',ylim=c(0,1200),xlim=c(1,5000),ann=FALSE, axes=TRUE)  # ,main="Distance vs PGA"
# 畫格線
grid.x <- c(seq(0,5000,by=100))
grid.y <- c(seq(0,1200,by=100))
abline(h=grid.y,col="grey")
abline(v=grid.x,col="grey")
abline(h=700,col="blue")
# points
lines(R1,signal,pch=1,cex=0.5,col="red",lty=1,lwd=2)
lines(R1,signal1,pch=1,cex=0.5,col="orange",lty=1,lwd=2)
lines(R1,signal2,pch=1,cex=0.5,col="darkgreen",lty=1,lwd=2)
lines(R1,signal3,pch=1,cex=0.5,col="purple",lty=1,lwd=2)
# legend
legend.names <- c("Original Signal","n = 2","n = 3","n = 4") # ,"Yeh,2016"
legend(100,300,legend=legend.names,col=c("red","orange","darkgreen","purple"),lwd=c(2,2,2,2,1),lty=c(1,1,1,1,2),bg="white",cex=2)
# title
mtext(expression(bold("Bandworth Filter Shape")),side=3,line=4.5,cex=2.5)
# axis title
mtext("Amplitude",side=2,line=3,cex=2)
mtext("Frequency",side=1,line=3,cex=2)
# sigma x=2.7,2.7,3.5
# text(4,0.0017,paste("interevent sigma =",inter.residual),cex=2)
# text(4,0.0013,paste("intraevent sigma =",intra.residual),cex=2)
# text(5.5,0.001,paste("total sigma =",total),cex=2)
dev.off()
## plot filter shape
hpassButterworth <- function(npts, deltat, hfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/hfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
hp <- sqrt(omega^(2*n)/(1.0+omega^(2*n)))
hp
}
lpassButterworth <- function(npts, deltat, lfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/lfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
lp <- sqrt(1.0/(1.0+omega^(2*n)))
lp
}
bandpass <- function(npts, deltat, hfc, lfc, n){
deltaf <- 1.0/(deltat*npts)
domegah <- deltaf/hfc
domegal <- deltaf/lfc
omega <- rep(0,npts/2+1)
omegah <- (seq(1:(npts/2+1))-1)*domegah
omegal <- (seq(1:(npts/2+1))-1)*domegal
bp <- sqrt(omegah^(2*n)/(1.0+omegah^(2*n)))*sqrt(1.0/(1.0+omegal^(2*n)))
bp
}
signal <- c(rep(1000,10001))
# hpassButterworth(nfft, dt, fc[1], nPole)
nfft <- 20000
dt <- 0.01
fc <- c()
fc[1] <- 10
fc[2] <- 15
nPole <- 2
signal1 <- signal*lpassButterworth(nfft, dt, fc[1], nPole)
signal2 <- signal*lpassButterworth(nfft, dt, fc[1], 3)
signal3 <- signal*lpassButterworth(nfft, dt, fc[1], 4)
#
# signal2 <- signal*lpassButterworth(nfft, dt, fc[2], nPole)
# signal3 <- signal*bandpass(nfft, dt, fc[1], fc[2], nPole)
test <- hpassButterworth(nfft, dt, fc[1], nPole)
### plot
pic.name <- "Shape"
pic1 <- paste("C:/Users/User/Desktop/2018_Subduction zone earthquakes_research/201807_thesis/SA/plot Butterworth Filter shape/export image/",pic.name,".png")
png(pic1,width=900,height=900)
R1 <- c(seq(1,10001,by=1))                                                      # 1,600;10,450
plot(R1,signal,type='n',ylim=c(0,1200),xlim=c(1,5000),ann=FALSE, axes=TRUE)  # ,main="Distance vs PGA"
# 畫格線
grid.x <- c(seq(0,5000,by=100))
grid.y <- c(seq(0,1200,by=100))
abline(h=grid.y,col="grey")
abline(v=grid.x,col="grey")
abline(h=700,col="blue")
# points
lines(R1,signal,pch=1,cex=0.5,col="red",lty=1,lwd=2)
lines(R1,signal1,pch=1,cex=0.5,col="orange",lty=1,lwd=2)
lines(R1,signal2,pch=1,cex=0.5,col="darkgreen",lty=1,lwd=2)
lines(R1,signal3,pch=1,cex=0.5,col="purple",lty=1,lwd=2)
# legend
legend.names <- c("Original Signal","n = 2","n = 3","n = 4") # ,"Yeh,2016"
legend(100,300,legend=legend.names,col=c("red","orange","darkgreen","purple"),lwd=c(2,2,2,2,1),lty=c(1,1,1,1,2),bg="white",cex=2)
# title
mtext(expression(bold("Bandworth Filter Shape")),side=3,line=4.5,cex=2.5)
# axis title
mtext("Amplitude",side=2,line=3,cex=2)
mtext("Frequency",side=1,line=3,cex=2)
# sigma x=2.7,2.7,3.5
# text(4,0.0017,paste("interevent sigma =",inter.residual),cex=2)
# text(4,0.0013,paste("intraevent sigma =",intra.residual),cex=2)
# text(5.5,0.001,paste("total sigma =",total),cex=2)
dev.off()
## plot filter shape
hpassButterworth <- function(npts, deltat, hfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/hfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
hp <- sqrt(omega^(2*n)/(1.0+omega^(2*n)))
hp
}
lpassButterworth <- function(npts, deltat, lfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/lfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
lp <- sqrt(1.0/(1.0+omega^(2*n)))
lp
}
bandpass <- function(npts, deltat, hfc, lfc, n){
deltaf <- 1.0/(deltat*npts)
domegah <- deltaf/hfc
domegal <- deltaf/lfc
omega <- rep(0,npts/2+1)
omegah <- (seq(1:(npts/2+1))-1)*domegah
omegal <- (seq(1:(npts/2+1))-1)*domegal
bp <- sqrt(omegah^(2*n)/(1.0+omegah^(2*n)))*sqrt(1.0/(1.0+omegal^(2*n)))
bp
}
signal <- c(rep(1000,10001))
# hpassButterworth(nfft, dt, fc[1], nPole)
nfft <- 20000
dt <- 0.01
fc <- c()
fc[1] <- 10
fc[2] <- 15
nPole <- 2
signal1 <- signal*lpassButterworth(nfft, dt, fc[1], nPole)
signal2 <- signal*lpassButterworth(nfft, dt, fc[1], 3)
signal3 <- signal*lpassButterworth(nfft, dt, fc[1], 4)
#
# signal2 <- signal*lpassButterworth(nfft, dt, fc[2], nPole)
# signal3 <- signal*bandpass(nfft, dt, fc[1], fc[2], nPole)
test <- hpassButterworth(nfft, dt, fc[1], nPole)
### plot
pic.name <- "Shape"
pic1 <- paste("C:/Users/User/Desktop/2018_Subduction zone earthquakes_research/201807_thesis/SA/plot Butterworth Filter shape/export image/",pic.name,".png")
png(pic1,width=900,height=900)
R1 <- c(seq(1,10001,by=1))                                                      # 1,600;10,450
plot(R1,signal,type='n',ylim=c(0,1200),xlim=c(1,5000),ann=FALSE, axes=TRUE)  # ,main="Distance vs PGA"
# 畫格線
grid.x <- c(seq(0,5000,by=100))
grid.y <- c(seq(0,1200,by=100))
abline(h=grid.y,col="grey")
abline(v=grid.x,col="grey")
abline(h=700,col="blue")
# points
lines(R1,signal,pch=1,cex=0.5,col="red",lty=1,lwd=2)
lines(R1,signal1,pch=1,cex=0.5,col="orange",lty=1,lwd=2)
lines(R1,signal2,pch=1,cex=0.5,col="darkgreen",lty=1,lwd=2)
lines(R1,signal3,pch=1,cex=0.5,col="purple",lty=1,lwd=2)
# legend
legend.names <- c("Original Signal","n = 2","n = 3","n = 4") # ,"Yeh,2016"
legend(100,300,legend=legend.names,col=c("red","orange","darkgreen","purple"),lwd=c(2,2,2,2,1),lty=c(1,1,1,1,2),bg="white",cex=2)
# title
mtext(expression(bold("Bandworth Filter Shape")),side=3,line=1,cex=2.5)
# axis title
mtext("Amplitude",side=2,line=3,cex=2)
mtext("Frequency",side=1,line=3,cex=2)
# sigma x=2.7,2.7,3.5
# text(4,0.0017,paste("interevent sigma =",inter.residual),cex=2)
# text(4,0.0013,paste("intraevent sigma =",intra.residual),cex=2)
# text(5.5,0.001,paste("total sigma =",total),cex=2)
dev.off()
## plot filter shape
hpassButterworth <- function(npts, deltat, hfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/hfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
hp <- sqrt(omega^(2*n)/(1.0+omega^(2*n)))
hp
}
lpassButterworth <- function(npts, deltat, lfc, n){
deltaf <- 1.0/(deltat*npts)
domega <- deltaf/lfc
omega <- rep(0,npts/2+1)
omega <- (seq(1:(npts/2+1))-1)*domega
lp <- sqrt(1.0/(1.0+omega^(2*n)))
lp
}
bandpass <- function(npts, deltat, hfc, lfc, n){
deltaf <- 1.0/(deltat*npts)
domegah <- deltaf/hfc
domegal <- deltaf/lfc
omega <- rep(0,npts/2+1)
omegah <- (seq(1:(npts/2+1))-1)*domegah
omegal <- (seq(1:(npts/2+1))-1)*domegal
bp <- sqrt(omegah^(2*n)/(1.0+omegah^(2*n)))*sqrt(1.0/(1.0+omegal^(2*n)))
bp
}
signal <- c(rep(1000,10001))
# hpassButterworth(nfft, dt, fc[1], nPole)
nfft <- 20000
dt <- 0.01
fc <- c()
fc[1] <- 10
fc[2] <- 15
nPole <- 2
signal1 <- signal*lpassButterworth(nfft, dt, fc[1], nPole)
signal2 <- signal*lpassButterworth(nfft, dt, fc[1], 3)
signal3 <- signal*lpassButterworth(nfft, dt, fc[1], 4)
#
# signal2 <- signal*lpassButterworth(nfft, dt, fc[2], nPole)
# signal3 <- signal*bandpass(nfft, dt, fc[1], fc[2], nPole)
test <- hpassButterworth(nfft, dt, fc[1], nPole)
### plot
pic.name <- "Shape"
pic1 <- paste("C:/Users/User/Desktop/2018_Subduction zone earthquakes_research/201807_thesis/SA/plot Butterworth Filter shape/export image/",pic.name,".png")
png(pic1,width=900,height=900)
R1 <- c(seq(1,10001,by=1))                                                      # 1,600;10,450
plot(R1,signal,type='n',ylim=c(0,1200),xlim=c(1,5000),ann=FALSE, axes=TRUE)  # ,main="Distance vs PGA"
# 畫格線
grid.x <- c(seq(0,5000,by=100))
grid.y <- c(seq(0,1200,by=100))
abline(h=grid.y,col="grey")
abline(v=grid.x,col="grey")
abline(h=700,col="blue")
# points
lines(R1,signal,pch=1,cex=0.5,col="red",lty=1,lwd=2)
lines(R1,signal1,pch=1,cex=0.5,col="orange",lty=1,lwd=2)
lines(R1,signal2,pch=1,cex=0.5,col="darkgreen",lty=1,lwd=2)
lines(R1,signal3,pch=1,cex=0.5,col="purple",lty=1,lwd=2)
# legend
legend.names <- c("Original Signal","n = 2","n = 3","n = 4") # ,"Yeh,2016"
legend(100,300,legend=legend.names,col=c("red","orange","darkgreen","purple"),lwd=c(2,2,2,2,1),lty=c(1,1,1,1,2),bg="white",cex=2)
# title
mtext(expression(bold("Lowpass Filter Shape")),side=3,line=1,cex=2.5)
# axis title
mtext("Amplitude",side=2,line=3,cex=2)
mtext("Frequency",side=1,line=3,cex=2)
# sigma x=2.7,2.7,3.5
# text(4,0.0017,paste("interevent sigma =",inter.residual),cex=2)
# text(4,0.0013,paste("intraevent sigma =",intra.residual),cex=2)
# text(5.5,0.001,paste("total sigma =",total),cex=2)
dev.off()
