# plane2.for.merge <- plane2[,c("filter.id","Rrup_p2")]
# #
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30,plane1.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30_2,plane2.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2$Avg_Rrup <- (rec_FM_Vs30_2$Rrup_p1+rec_FM_Vs30_2$Rrup_p2)/2.
# # check <- rec_FM_Vs30_2[,c(1:3,101:117)]
# # '''
# Hypo (Mw <= 4.8)
# Hori.R <- hageodist(rec_FM_Vs30_2$final.Lon,rec_FM_Vs30_2$final.Lat,rec_FM_Vs30_2$Lon.Sta.X,rec_FM_Vs30_2$Lat.Sta.Y)
# rec_FM_Vs30_2$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30_2$final.Dep**2)
Hori.R <- hageodist(rec_FM_Vs30$final.Lon,rec_FM_Vs30_2$final.Lat,rec_FM_Vs30_2$Lon.Sta.X,rec_FM_Vs30_2$Lat.Sta.Y)
rec_FM_Vs30$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30_2$final.Dep**2)
# '''
# Adopted Rrup
# rec_FM_Vs30_2$Adopted_Rrup <- rec_FM_Vs30_2$Hypo
# rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Adopted_Rrup"] <- rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Avg_Rrup"]
# check <- rec_FM_Vs30_2[,c(1:3,101:119)]
# '''
# write.table(rec_FM_Vs30_2,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2018.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
write.table(rec_FM_Vs30,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2019.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
## 2020/08/05
##################################################################
source(file = "D:/picking/total_file/4-Rrup/hageodist.R")
# import records
rec_FM_Vs30 <- read.table(file="../3-Vs30/sgm.2018.BH.Sta.rec.csv",sep=",",header=TRUE,stringsAsFactors = FALSE)
#
# check <- rec_FM_Vs30[,c(1:3,101:114)]
##################################################################
#!利用經驗公式計算斷層面積、長寬比、斷層破裂面長度與寬度
#!=================================================================
#  !    計算斷層面積                                                |
#  !    Wells and Coppersmith(1994):                                |
#  !    log(A)=-3.49+0.91*M     sigma(log(A))=0.24                  |
#  !    震矩規模適用範圍：4.8~7.9                                   |
#  !=================================================================
#  !    NGA計畫中計算斷層破裂面之長寬比                             |
#  !    log(AR)=(0.01752-0.00472*FN-0.01099*FR)*(M-4)**3.097        |
#  !=================================================================
# 依小葉的碩士論文，NGA使用的面積長寬比 (AR,aspect ratio)
# AR <- function(Mw,Fnm,Frv){
#   x1 <- Mw-4
#   AR <- 10**((0.01752-0.00472*Fnm-0.01099*Frv)*(x1**3.097))
#   #AR
#   sprintf("%.10f", AR)
# }
##################################################################
# # '''
# ################################################
# # output for Fortran code (plane1)
# cal.plane1 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
# output1 <- cal.plane1[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_1","Final_Dip_1","Fnm_1","Frv_1","Lon.Sta.X","Lat.Sta.Y","filter.id")]
# write.table(output1,file="D:/picking/total_file/4-Rrup/Fortran_plane1/fy_in_plane1.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
#
# # output for Fortran code (plane2)
# cal.plane2 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
# output2 <- cal.plane2[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_2","Final_Dip_2","Fnm_2","Frv_2","Lon.Sta.X","Lat.Sta.Y","filter.id")]
# write.table(output2,file="D:/picking/total_file/4-Rrup/Fortran_plane2/fy_in_plane2.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
#
# ################################################
# # go to Fortran_plane1 and Fortran_plane2 Folder to run Fortran code
# ################################################
#
# # Rrup
# plane1 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane1/fy_out_plane1.txt")
# names(plane1) <- c("filter.id","Rrup_p1","Rrup.x1","Rrup.y1","Rrup.z1")
# plane1.for.merge <- plane1[,c("filter.id","Rrup_p1")]
# #
# plane2 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane2/fy_out_plane2.txt")
# names(plane2) <- c("filter.id","Rrup_p2","Rrup.x2","Rrup.y2","Rrup.z2")
# plane2.for.merge <- plane2[,c("filter.id","Rrup_p2")]
# #
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30,plane1.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30_2,plane2.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2$Avg_Rrup <- (rec_FM_Vs30_2$Rrup_p1+rec_FM_Vs30_2$Rrup_p2)/2.
# # check <- rec_FM_Vs30_2[,c(1:3,101:117)]
# # '''
# Hypo (Mw <= 4.8)
# Hori.R <- hageodist(rec_FM_Vs30_2$final.Lon,rec_FM_Vs30_2$final.Lat,rec_FM_Vs30_2$Lon.Sta.X,rec_FM_Vs30_2$Lat.Sta.Y)
# rec_FM_Vs30_2$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30_2$final.Dep**2)
Hori.R <- hageodist(rec_FM_Vs30$final.Lon,rec_FM_Vs30$final.Lat,rec_FM_Vs30$Lon.Sta.X,rec_FM_Vs30$Lat.Sta.Y)
rec_FM_Vs30$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30_2$final.Dep**2)
# '''
# Adopted Rrup
# rec_FM_Vs30_2$Adopted_Rrup <- rec_FM_Vs30_2$Hypo
# rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Adopted_Rrup"] <- rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Avg_Rrup"]
# check <- rec_FM_Vs30_2[,c(1:3,101:119)]
# '''
# write.table(rec_FM_Vs30_2,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2018.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
write.table(rec_FM_Vs30,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2019.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
## 2020/08/05
##################################################################
source(file = "D:/picking/total_file/4-Rrup/hageodist.R")
# import records
rec_FM_Vs30 <- read.table(file="../3-Vs30/sgm.2018.BH.Sta.rec.csv",sep=",",header=TRUE,stringsAsFactors = FALSE)
#
# check <- rec_FM_Vs30[,c(1:3,101:114)]
##################################################################
#!利用經驗公式計算斷層面積、長寬比、斷層破裂面長度與寬度
#!=================================================================
#  !    計算斷層面積                                                |
#  !    Wells and Coppersmith(1994):                                |
#  !    log(A)=-3.49+0.91*M     sigma(log(A))=0.24                  |
#  !    震矩規模適用範圍：4.8~7.9                                   |
#  !=================================================================
#  !    NGA計畫中計算斷層破裂面之長寬比                             |
#  !    log(AR)=(0.01752-0.00472*FN-0.01099*FR)*(M-4)**3.097        |
#  !=================================================================
# 依小葉的碩士論文，NGA使用的面積長寬比 (AR,aspect ratio)
# AR <- function(Mw,Fnm,Frv){
#   x1 <- Mw-4
#   AR <- 10**((0.01752-0.00472*Fnm-0.01099*Frv)*(x1**3.097))
#   #AR
#   sprintf("%.10f", AR)
# }
##################################################################
# # '''
# ################################################
# # output for Fortran code (plane1)
# cal.plane1 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
# output1 <- cal.plane1[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_1","Final_Dip_1","Fnm_1","Frv_1","Lon.Sta.X","Lat.Sta.Y","filter.id")]
# write.table(output1,file="D:/picking/total_file/4-Rrup/Fortran_plane1/fy_in_plane1.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
#
# # output for Fortran code (plane2)
# cal.plane2 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
# output2 <- cal.plane2[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_2","Final_Dip_2","Fnm_2","Frv_2","Lon.Sta.X","Lat.Sta.Y","filter.id")]
# write.table(output2,file="D:/picking/total_file/4-Rrup/Fortran_plane2/fy_in_plane2.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
#
# ################################################
# # go to Fortran_plane1 and Fortran_plane2 Folder to run Fortran code
# ################################################
#
# # Rrup
# plane1 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane1/fy_out_plane1.txt")
# names(plane1) <- c("filter.id","Rrup_p1","Rrup.x1","Rrup.y1","Rrup.z1")
# plane1.for.merge <- plane1[,c("filter.id","Rrup_p1")]
# #
# plane2 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane2/fy_out_plane2.txt")
# names(plane2) <- c("filter.id","Rrup_p2","Rrup.x2","Rrup.y2","Rrup.z2")
# plane2.for.merge <- plane2[,c("filter.id","Rrup_p2")]
# #
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30,plane1.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30_2,plane2.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2$Avg_Rrup <- (rec_FM_Vs30_2$Rrup_p1+rec_FM_Vs30_2$Rrup_p2)/2.
# # check <- rec_FM_Vs30_2[,c(1:3,101:117)]
# # '''
# Hypo (Mw <= 4.8)
# Hori.R <- hageodist(rec_FM_Vs30_2$final.Lon,rec_FM_Vs30_2$final.Lat,rec_FM_Vs30_2$Lon.Sta.X,rec_FM_Vs30_2$Lat.Sta.Y)
# rec_FM_Vs30_2$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30_2$final.Dep**2)
Hori.R <- hageodist(rec_FM_Vs30$final.Lon,rec_FM_Vs30$final.Lat,rec_FM_Vs30$Lon.Sta.X,rec_FM_Vs30$Lat.Sta.Y)
rec_FM_Vs30$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30$final.Dep**2)
# '''
# Adopted Rrup
# rec_FM_Vs30_2$Adopted_Rrup <- rec_FM_Vs30_2$Hypo
# rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Adopted_Rrup"] <- rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Avg_Rrup"]
# check <- rec_FM_Vs30_2[,c(1:3,101:119)]
# '''
# write.table(rec_FM_Vs30_2,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2018.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
write.table(rec_FM_Vs30,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2019.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
## 2020/08/05
##################################################################
source(file = "D:/picking/total_file/4-Rrup/hageodist.R")
# import records
rec_FM_Vs30 <- read.table(file="../3-Vs30/sgm.2019.BH.Sta.rec.csv",sep=",",header=TRUE,stringsAsFactors = FALSE)
#
# check <- rec_FM_Vs30[,c(1:3,101:114)]
##################################################################
#!利用經驗公式計算斷層面積、長寬比、斷層破裂面長度與寬度
#!=================================================================
#  !    計算斷層面積                                                |
#  !    Wells and Coppersmith(1994):                                |
#  !    log(A)=-3.49+0.91*M     sigma(log(A))=0.24                  |
#  !    震矩規模適用範圍：4.8~7.9                                   |
#  !=================================================================
#  !    NGA計畫中計算斷層破裂面之長寬比                             |
#  !    log(AR)=(0.01752-0.00472*FN-0.01099*FR)*(M-4)**3.097        |
#  !=================================================================
# 依小葉的碩士論文，NGA使用的面積長寬比 (AR,aspect ratio)
# AR <- function(Mw,Fnm,Frv){
#   x1 <- Mw-4
#   AR <- 10**((0.01752-0.00472*Fnm-0.01099*Frv)*(x1**3.097))
#   #AR
#   sprintf("%.10f", AR)
# }
##################################################################
# # '''
# ################################################
# # output for Fortran code (plane1)
# cal.plane1 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
# output1 <- cal.plane1[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_1","Final_Dip_1","Fnm_1","Frv_1","Lon.Sta.X","Lat.Sta.Y","filter.id")]
# write.table(output1,file="D:/picking/total_file/4-Rrup/Fortran_plane1/fy_in_plane1.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
#
# # output for Fortran code (plane2)
# cal.plane2 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
# output2 <- cal.plane2[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_2","Final_Dip_2","Fnm_2","Frv_2","Lon.Sta.X","Lat.Sta.Y","filter.id")]
# write.table(output2,file="D:/picking/total_file/4-Rrup/Fortran_plane2/fy_in_plane2.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
#
# ################################################
# # go to Fortran_plane1 and Fortran_plane2 Folder to run Fortran code
# ################################################
#
# # Rrup
# plane1 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane1/fy_out_plane1.txt")
# names(plane1) <- c("filter.id","Rrup_p1","Rrup.x1","Rrup.y1","Rrup.z1")
# plane1.for.merge <- plane1[,c("filter.id","Rrup_p1")]
# #
# plane2 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane2/fy_out_plane2.txt")
# names(plane2) <- c("filter.id","Rrup_p2","Rrup.x2","Rrup.y2","Rrup.z2")
# plane2.for.merge <- plane2[,c("filter.id","Rrup_p2")]
# #
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30,plane1.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30_2,plane2.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2$Avg_Rrup <- (rec_FM_Vs30_2$Rrup_p1+rec_FM_Vs30_2$Rrup_p2)/2.
# # check <- rec_FM_Vs30_2[,c(1:3,101:117)]
# # '''
# Hypo (Mw <= 4.8)
# Hori.R <- hageodist(rec_FM_Vs30_2$final.Lon,rec_FM_Vs30_2$final.Lat,rec_FM_Vs30_2$Lon.Sta.X,rec_FM_Vs30_2$Lat.Sta.Y)
# rec_FM_Vs30_2$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30_2$final.Dep**2)
Hori.R <- hageodist(rec_FM_Vs30$final.Lon,rec_FM_Vs30$final.Lat,rec_FM_Vs30$Lon.Sta.X,rec_FM_Vs30$Lat.Sta.Y)
rec_FM_Vs30$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30$final.Dep**2)
# '''
# Adopted Rrup
# rec_FM_Vs30_2$Adopted_Rrup <- rec_FM_Vs30_2$Hypo
# rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Adopted_Rrup"] <- rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Avg_Rrup"]
# check <- rec_FM_Vs30_2[,c(1:3,101:119)]
# '''
# write.table(rec_FM_Vs30_2,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2018.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
write.table(rec_FM_Vs30,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2019.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
## 2020/08/05
##################################################################
source(file = "D:/picking/total_file/4-Rrup/hageodist.R")
# import records
rec_FM_Vs30 <- read.table(file="D:/picking/total_file/3-Vs30/sgm.2019.BH.Sta.rec.csv",sep=",",header=TRUE,stringsAsFactors = FALSE)
#
# check <- rec_FM_Vs30[,c(1:3,101:114)]
##################################################################
#!??蝬?撘??撅日蝛撖祆?撅斤鋆?摨西?祝摨?
#!=================================================================
#  !    閮?撅日蝛?                                                |
#  !    Wells and Coppersmith(1994):                                |
#  !    log(A)=-3.49+0.91*M     sigma(log(A))=0.24                  |
#  !    ??閬芋??蝭???4.8~7.9                                   |
#  !=================================================================
#  !    NGA閮銝剛??撅斤鋆銋撖祆??                             |
#  !    log(AR)=(0.01752-0.00472*FN-0.01099*FR)*(M-4)**3.097        |
#  !=================================================================
# 靘???◣憯怨???GA雿輻??蝛撖祆?? (AR,aspect ratio)
# AR <- function(Mw,Fnm,Frv){
#   x1 <- Mw-4
#   AR <- 10**((0.01752-0.00472*Fnm-0.01099*Frv)*(x1**3.097))
#   #AR
#   sprintf("%.10f", AR)
# }
##################################################################
# '''
################################################
# output for Fortran code (plane1)
cal.plane1 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
output1 <- cal.plane1[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_1","Final_Dip_1","Fnm_1","Frv_1","Lon.Sta.X","Lat.Sta.Y","filter.id")]
write.table(output1,file="D:/picking/total_file/4-Rrup/Fortran_plane1/2019_fy_in_plane1.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
# output for Fortran code (plane2)
cal.plane2 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
output2 <- cal.plane2[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_2","Final_Dip_2","Fnm_2","Frv_2","Lon.Sta.X","Lat.Sta.Y","filter.id")]
write.table(output2,file="D:/picking/total_file/4-Rrup/Fortran_plane2/2019_fy_in_plane2.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
################################################
# go to Fortran_plane1 and Fortran_plane2 Folder to run Fortran code
################################################
# # Rrup
# plane1 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane1/fy_out_plane1.txt")
# names(plane1) <- c("filter.id","Rrup_p1","Rrup.x1","Rrup.y1","Rrup.z1")
# plane1.for.merge <- plane1[,c("filter.id","Rrup_p1")]
# #
# plane2 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane2/fy_out_plane2.txt")
# names(plane2) <- c("filter.id","Rrup_p2","Rrup.x2","Rrup.y2","Rrup.z2")
# plane2.for.merge <- plane2[,c("filter.id","Rrup_p2")]
# #
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30,plane1.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30_2,plane2.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2$Avg_Rrup <- (rec_FM_Vs30_2$Rrup_p1+rec_FM_Vs30_2$Rrup_p2)/2.
# # check <- rec_FM_Vs30_2[,c(1:3,101:117)]
# # '''
# # Hypo (Mw <= 4.8)
# # Hori.R <- hageodist(rec_FM_Vs30_2$final.Lon,rec_FM_Vs30_2$final.Lat,rec_FM_Vs30_2$Lon.Sta.X,rec_FM_Vs30_2$Lat.Sta.Y)
# # rec_FM_Vs30_2$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30_2$final.Dep**2)
# Hori.R <- hageodist(rec_FM_Vs30$final.Lon,rec_FM_Vs30$final.Lat,rec_FM_Vs30$Lon.Sta.X,rec_FM_Vs30$Lat.Sta.Y)
# rec_FM_Vs30$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30$final.Dep**2)
# # '''
# # Adopted Rrup
# # rec_FM_Vs30_2$Adopted_Rrup <- rec_FM_Vs30_2$Hypo
# # rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Adopted_Rrup"] <- rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Avg_Rrup"]
# # check <- rec_FM_Vs30_2[,c(1:3,101:119)]
# # '''
# # write.table(rec_FM_Vs30_2,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2018.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
# write.table(rec_FM_Vs30,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2019.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
## 2020/08/05
##################################################################
source(file = "D:/picking/total_file/4-Rrup/hageodist.R")
# import records
rec_FM_Vs30 <- read.table(file="D:/picking/total_file/3-Vs30/sgm.2019.BH.Sta.rec.csv",sep=",",header=TRUE,stringsAsFactors = FALSE)
#
# check <- rec_FM_Vs30[,c(1:3,101:114)]
##################################################################
#!利用經驗公式計算斷層面積、長寬比、斷層破裂面長度與寬度
#!=================================================================
#  !    計算斷層面積                                                |
#  !    Wells and Coppersmith(1994):                                |
#  !    log(A)=-3.49+0.91*M     sigma(log(A))=0.24                  |
#  !    震矩規模適用範圍：4.8~7.9                                   |
#  !=================================================================
#  !    NGA計畫中計算斷層破裂面之長寬比                             |
#  !    log(AR)=(0.01752-0.00472*FN-0.01099*FR)*(M-4)**3.097        |
#  !=================================================================
# 依小葉的碩士論文，NGA使用的面積長寬比 (AR,aspect ratio)
# AR <- function(Mw,Fnm,Frv){
#   x1 <- Mw-4
#   AR <- 10**((0.01752-0.00472*Fnm-0.01099*Frv)*(x1**3.097))
#   #AR
#   sprintf("%.10f", AR)
# }
##################################################################
# '''
################################################
# output for Fortran code (plane1)
cal.plane1 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
output1 <- cal.plane1[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_1","Final_Dip_1","Fnm_1","Frv_1","Lon.Sta.X","Lat.Sta.Y","filter.id")]
write.table(output1,file="D:/picking/total_file/4-Rrup/Fortran_plane1/2019_fy_in_plane1.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
# output for Fortran code (plane2)
cal.plane2 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
output2 <- cal.plane2[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_2","Final_Dip_2","Fnm_2","Frv_2","Lon.Sta.X","Lat.Sta.Y","filter.id")]
write.table(output2,file="D:/picking/total_file/4-Rrup/Fortran_plane2/2019_fy_in_plane2.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
################################################
# go to Fortran_plane1 and Fortran_plane2 Folder to run Fortran code
################################################
# # Rrup
# plane1 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane1/fy_out_plane1.txt")
# names(plane1) <- c("filter.id","Rrup_p1","Rrup.x1","Rrup.y1","Rrup.z1")
# plane1.for.merge <- plane1[,c("filter.id","Rrup_p1")]
# #
# plane2 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane2/fy_out_plane2.txt")
# names(plane2) <- c("filter.id","Rrup_p2","Rrup.x2","Rrup.y2","Rrup.z2")
# plane2.for.merge <- plane2[,c("filter.id","Rrup_p2")]
# #
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30,plane1.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2 <- merge(rec_FM_Vs30_2,plane2.for.merge,by=c("filter.id"),all.x=TRUE)
# rec_FM_Vs30_2$Avg_Rrup <- (rec_FM_Vs30_2$Rrup_p1+rec_FM_Vs30_2$Rrup_p2)/2.
# # check <- rec_FM_Vs30_2[,c(1:3,101:117)]
# # '''
# # Hypo (Mw <= 4.8)
# # Hori.R <- hageodist(rec_FM_Vs30_2$final.Lon,rec_FM_Vs30_2$final.Lat,rec_FM_Vs30_2$Lon.Sta.X,rec_FM_Vs30_2$Lat.Sta.Y)
# # rec_FM_Vs30_2$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30_2$final.Dep**2)
# Hori.R <- hageodist(rec_FM_Vs30$final.Lon,rec_FM_Vs30$final.Lat,rec_FM_Vs30$Lon.Sta.X,rec_FM_Vs30$Lat.Sta.Y)
# rec_FM_Vs30$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30$final.Dep**2)
# # '''
# # Adopted Rrup
# # rec_FM_Vs30_2$Adopted_Rrup <- rec_FM_Vs30_2$Hypo
# # rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Adopted_Rrup"] <- rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Avg_Rrup"]
# # check <- rec_FM_Vs30_2[,c(1:3,101:119)]
# # '''
# # write.table(rec_FM_Vs30_2,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2018.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
# write.table(rec_FM_Vs30,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2019.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
# Rrup
plane1 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane1/2019_fy_out_plane1.txt")
names(plane1) <- c("filter.id","Rrup_p1","Rrup.x1","Rrup.y1","Rrup.z1")
plane1.for.merge <- plane1[,c("filter.id","Rrup_p1")]
#
plane2 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane2/2019_fy_out_plane2.txt")
names(plane2) <- c("filter.id","Rrup_p2","Rrup.x2","Rrup.y2","Rrup.z2")
plane2.for.merge <- plane2[,c("filter.id","Rrup_p2")]
#
rec_FM_Vs30_2 <- merge(rec_FM_Vs30,plane1.for.merge,by=c("filter.id"),all.x=TRUE)
rec_FM_Vs30_2 <- merge(rec_FM_Vs30_2,plane2.for.merge,by=c("filter.id"),all.x=TRUE)
rec_FM_Vs30_2$Avg_Rrup <- (rec_FM_Vs30_2$Rrup_p1+rec_FM_Vs30_2$Rrup_p2)/2.
# check <- rec_FM_Vs30_2[,c(1:3,101:117)]
# '''
# Rrup
plane1 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane1/fy_out_plane1.txt")
names(plane1) <- c("filter.id","Rrup_p1","Rrup.x1","Rrup.y1","Rrup.z1")
plane1.for.merge <- plane1[,c("filter.id","Rrup_p1")]
#
plane2 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane2/fy_out_plane2.txt")
names(plane2) <- c("filter.id","Rrup_p2","Rrup.x2","Rrup.y2","Rrup.z2")
plane2.for.merge <- plane2[,c("filter.id","Rrup_p2")]
#
rec_FM_Vs30_2 <- merge(rec_FM_Vs30,plane1.for.merge,by=c("filter.id"),all.x=TRUE)
rec_FM_Vs30_2 <- merge(rec_FM_Vs30_2,plane2.for.merge,by=c("filter.id"),all.x=TRUE)
rec_FM_Vs30_2$Avg_Rrup <- (rec_FM_Vs30_2$Rrup_p1+rec_FM_Vs30_2$Rrup_p2)/2.
# check <- rec_FM_Vs30_2[,c(1:3,101:117)]
# Hypo (Mw <= 4.8)
Hori.R <- hageodist(rec_FM_Vs30_2$final.Lon,rec_FM_Vs30_2$final.Lat,rec_FM_Vs30_2$Lon.Sta.X,rec_FM_Vs30_2$Lat.Sta.Y)
rec_FM_Vs30_2$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30_2$final.Dep**2)
# Adopted Rrup
rec_FM_Vs30_2$Adopted_Rrup <- rec_FM_Vs30_2$Hypo
rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Adopted_Rrup"] <- rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Avg_Rrup"]
check <- rec_FM_Vs30_2[,c(1:3,101:119)]
write.table(rec_FM_Vs30_2,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2019.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
## 2020/08/05
##################################################################
source(file = "D:/picking/total_file/4-Rrup/hageodist.R")
# import records
rec_FM_Vs30 <- read.table(file="D:/picking/total_file/3-Vs30/sgm.2019.BH.Sta.rec.csv",sep=",",header=TRUE,stringsAsFactors = FALSE)
#
# check <- rec_FM_Vs30[,c(1:3,101:114)]
##################################################################
#!??蝬?撘??撅日蝛撖祆?撅斤鋆?摨西?祝摨?
#!=================================================================
#  !    閮?撅日蝛?                                                |
#  !    Wells and Coppersmith(1994):                                |
#  !    log(A)=-3.49+0.91*M     sigma(log(A))=0.24                  |
#  !    ??閬芋??蝭???4.8~7.9                                   |
#  !=================================================================
#  !    NGA閮銝剛??撅斤鋆銋撖祆??                             |
#  !    log(AR)=(0.01752-0.00472*FN-0.01099*FR)*(M-4)**3.097        |
#  !=================================================================
# 靘???◣憯怨???GA雿輻??蝛撖祆?? (AR,aspect ratio)
# AR <- function(Mw,Fnm,Frv){
#   x1 <- Mw-4
#   AR <- 10**((0.01752-0.00472*Fnm-0.01099*Frv)*(x1**3.097))
#   #AR
#   sprintf("%.10f", AR)
# }
##################################################################
################################################
# output for Fortran code (plane1)
cal.plane1 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
output1 <- cal.plane1[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_1","Final_Dip_1","Fnm_1","Frv_1","Lon.Sta.X","Lat.Sta.Y","filter.id")]
write.table(output1,file="D:/picking/total_file/4-Rrup/Fortran_plane1/2019_fy_in_plane1.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
# output for Fortran code (plane2)
cal.plane2 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
output2 <- cal.plane2[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_2","Final_Dip_2","Fnm_2","Frv_2","Lon.Sta.X","Lat.Sta.Y","filter.id")]
write.table(output2,file="D:/picking/total_file/4-Rrup/Fortran_plane2/2019_fy_in_plane2.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
################################################
# go to Fortran_plane1 and Fortran_plane2 Folder to run Fortran code
################################################
# Rrup
plane1 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane1/2019_fy_out_plane1.txt")
names(plane1) <- c("filter.id","Rrup_p1","Rrup.x1","Rrup.y1","Rrup.z1")
plane1.for.merge <- plane1[,c("filter.id","Rrup_p1")]
#
plane2 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane2/2019_fy_out_plane2.txt")
names(plane2) <- c("filter.id","Rrup_p2","Rrup.x2","Rrup.y2","Rrup.z2")
plane2.for.merge <- plane2[,c("filter.id","Rrup_p2")]
#
rec_FM_Vs30_2 <- merge(rec_FM_Vs30,plane1.for.merge,by=c("filter.id"),all.x=TRUE)
rec_FM_Vs30_2 <- merge(rec_FM_Vs30_2,plane2.for.merge,by=c("filter.id"),all.x=TRUE)
rec_FM_Vs30_2$Avg_Rrup <- (rec_FM_Vs30_2$Rrup_p1+rec_FM_Vs30_2$Rrup_p2)/2.
# check <- rec_FM_Vs30_2[,c(1:3,101:117)]
# Hypo (Mw <= 4.8)
Hori.R <- hageodist(rec_FM_Vs30_2$final.Lon,rec_FM_Vs30_2$final.Lat,rec_FM_Vs30_2$Lon.Sta.X,rec_FM_Vs30_2$Lat.Sta.Y)
rec_FM_Vs30_2$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30_2$final.Dep**2)
# Adopted Rrup
rec_FM_Vs30_2$Adopted_Rrup <- rec_FM_Vs30_2$Hypo
rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Adopted_Rrup"] <- rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Avg_Rrup"]
check <- rec_FM_Vs30_2[,c(1:3,101:119)]
write.table(rec_FM_Vs30_2,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2019.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
## 2020/08/05
##################################################################
source(file = "D:/picking/total_file/4-Rrup/hageodist.R")
# import records
rec_FM_Vs30 <- read.table(file="D:/picking/total_file/3-Vs30/sgm.2019.BH.Sta.rec.csv",sep=",",header=TRUE,stringsAsFactors = FALSE)
#
# check <- rec_FM_Vs30[,c(1:3,101:114)]
##################################################################
#!利用經驗公式計算斷層面積、長寬比、斷層破裂面長度與寬度
#!=================================================================
#  !    計算斷層面積                                                |
#  !    Wells and Coppersmith(1994):                                |
#  !    log(A)=-3.49+0.91*M     sigma(log(A))=0.24                  |
#  !    震矩規模適用範圍：4.8~7.9                                   |
#  !=================================================================
#  !    NGA計畫中計算斷層破裂面之長寬比                             |
#  !    log(AR)=(0.01752-0.00472*FN-0.01099*FR)*(M-4)**3.097        |
#  !=================================================================
# 依小葉的碩士論文，NGA使用的面積長寬比 (AR,aspect ratio)
# AR <- function(Mw,Fnm,Frv){
#   x1 <- Mw-4
#   AR <- 10**((0.01752-0.00472*Fnm-0.01099*Frv)*(x1**3.097))
#   #AR
#   sprintf("%.10f", AR)
# }
##################################################################
################################################
# output for Fortran code (plane1)
cal.plane1 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
output1 <- cal.plane1[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_1","Final_Dip_1","Fnm_1","Frv_1","Lon.Sta.X","Lat.Sta.Y","filter.id")]
write.table(output1,file="D:/picking/total_file/4-Rrup/Fortran_plane1/2019_fy_in_plane1.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
# output for Fortran code (plane2)
cal.plane2 <- rec_FM_Vs30[which((!is.na(rec_FM_Vs30$FM_Index)) & (rec_FM_Vs30$Final_Mw>4.8)),]
output2 <- cal.plane2[c("rec.id","final.Lon","final.Lat","Final_Mw","final.Dep","Final_Strike_2","Final_Dip_2","Fnm_2","Frv_2","Lon.Sta.X","Lat.Sta.Y","filter.id")]
write.table(output2,file="D:/picking/total_file/4-Rrup/Fortran_plane2/2019_fy_in_plane2.txt",sep=" ",row.names = FALSE, col.names = FALSE, quote = FALSE)  # ,na="0"
################################################
# go to Fortran_plane1 and Fortran_plane2 Folder to run Fortran code
################################################
# Rrup
plane1 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane1/2019_fy_out_plane1.txt")
names(plane1) <- c("filter.id","Rrup_p1","Rrup.x1","Rrup.y1","Rrup.z1")
plane1.for.merge <- plane1[,c("filter.id","Rrup_p1")]
#
plane2 <- read.table(file="D:/picking/total_file/4-Rrup/Fortran_plane2/2019_fy_out_plane2.txt")
names(plane2) <- c("filter.id","Rrup_p2","Rrup.x2","Rrup.y2","Rrup.z2")
plane2.for.merge <- plane2[,c("filter.id","Rrup_p2")]
#
rec_FM_Vs30_2 <- merge(rec_FM_Vs30,plane1.for.merge,by=c("filter.id"),all.x=TRUE)
rec_FM_Vs30_2 <- merge(rec_FM_Vs30_2,plane2.for.merge,by=c("filter.id"),all.x=TRUE)
rec_FM_Vs30_2$Avg_Rrup <- (rec_FM_Vs30_2$Rrup_p1+rec_FM_Vs30_2$Rrup_p2)/2.
# check <- rec_FM_Vs30_2[,c(1:3,101:117)]
# Hypo (Mw <= 4.8)
Hori.R <- hageodist(rec_FM_Vs30_2$final.Lon,rec_FM_Vs30_2$final.Lat,rec_FM_Vs30_2$Lon.Sta.X,rec_FM_Vs30_2$Lat.Sta.Y)
rec_FM_Vs30_2$Hypo <- sqrt(Hori.R**2+rec_FM_Vs30_2$final.Dep**2)
# Adopted Rrup
rec_FM_Vs30_2$Adopted_Rrup <- rec_FM_Vs30_2$Hypo
rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Adopted_Rrup"] <- rec_FM_Vs30_2[which(!is.na(rec_FM_Vs30_2$Avg_Rrup)),"Avg_Rrup"]
check <- rec_FM_Vs30_2[,c(1:3,101:119)]
write.table(rec_FM_Vs30_2,file="D:/picking/total_file/4-Rrup/rec_FM_Vs30_Rrup_2019.csv",sep=",",row.names = FALSE, col.names = TRUE)  # ,na="0"
